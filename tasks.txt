6. Работа с каналами
На этом этапе необходимо реализовать управление каналами.

Ссылки
Организация модальных окон
extraReducers
Задачи
Реализуйте переключение по каналам (вместе с чатом).
Реализуйте выпадающее меню с кнопками управления каналом.
Реализуйте добавление нового канала. Имена каналов не должны повторяться. Создатель канала должен быть перемещён в добавленный канал.
Реализуйте удаление канала (с подтверждением). Удаляться могут только вновь созданные каналы. При удалении канала должны удаляться и его сообщения, а пользователи, находящиеся в удаляемом канале, должны быть перемещены в дефолтный канал.
Реализуйте переименование канала (внутри модального окна). Имена каналов не должны повторяться.
При реализации пользовательского интерфейса обратите внимание на его удобство и информативность: кнопки должны блокироваться на время сетевых запросов, фокус устанавливаться в соответствующее поле ввода, вёрстка не должна ломаться при переполнении (длинные сообщения, названия каналов, большое количество сообщений).

7. Регистрация
На этом шаге реализуйте регистрацию новых пользователей.

Задачи
Создайте страницу /signup с формой регистрации нового пользователя: имя пользователя, пароль и подтверждение пароля. Поля необходимо валидировать: каждое поле является обязательным, имя пользователя от 3 до 20 символов, пароль не менее 6 символов, пароль и его подтверждение должны совпадать. Сделайте ссылку на страницу регистрации со страницы авторизации.
При попытке регистрации пользователя с уже существующим логином, сервер ответит ошибкой с кодом 409. Реализуйте обработку ошибки серверной валидации показом соответствующего сообщения.
После успешной регистрации сделайте редирект на страницу с чатом.
Для удобства навигации добавьте на каждую страницу хедер со ссылкой на главную страницу. Текст ссылки - Hexlet Chat.
Для авторизованных пользователей покажите в хедере кнопку с текстом "Выйти". По нажатию на кнопку происходит разлогин текущего пользователя.

8. Интернационализация
Настало время отделить тексты, используемые в проекте, от кода. Будет не лишним освежить знания из урока об организации текстов интерфейса.

Ограничения
Дефолтная локаль - ru, автоматическое определение языка пользователя не используется. Это важно для прохождения автоматизированных тестов после завершения проекта.
Ссылки
react-18next
Задачи
Вынесите все тексты из интерфейсов, используя библиотеку i18n
Подсказки
Инициализация фронтенда
https://react.i18next.com/latest/i18nextprovider

9. Всплывающие уведомления
Любое приложение должно информировать пользователей о том, что происходит. Для этого используются всплывающие уведомления(toast).

Ссылки
react-toastify
Задачи
Подключите библиотеку для показа всплывающих уведомлений.
Реализуйте всплывающие уведомления при возникновении ошибок в загрузке данных.
Реализуйте всплывающие уведомления после успешного создания, переименовывания и удаления канала.
Подсказки
Текст сообщений - это часть интерфейса, поэтому должен использоваться i18n.

10. Фильтрация нецензурных слов
Так как у нас чат, пользователи могут писать любые слова без цензуры. Мы можем исправить это, добавив проверку нецензурных слов. Для этого можно создать свой список слов, но гораздо лучше подключить уже существующую для этого библиотеку, тогда не придётся постоянно обновлять словарь.

Ссылки
leo-profanity
Задачи
Подключите библиотеку для фильтрации нецензурных слов.
Реализуйте фильтрацию нецензурных слов в чате.

11. Эксплуатация
Любой, даже покрытый тестами код содержит баги. Значительная часть этих багов проявляется только в продакшен среде у реальных пользователей. Некоторые пользователи сообщат об ошибках с которыми они сталкиваются, но большинство молча уйдет с сервиса с осадком о "глючности". Все это приводит к потере клиентов и росту негатива по отношению к сервису.

Чтобы избежать этого, нужно как можно раньше узнавать о проблемах. Для этого используются специальные сервисы, коллекторы ошибок. Они подключаются к приложению через свои библиотеки и отслеживают возникающие ошибки. Затем информация об ошибках отправляется в сервис, а программистам уходит оповещение. Это позволяет быстро отреагировать и поправить серьезные ошибки.

Ссылки
Rollbar (react)
12factors
Задачи
Создайте бесплатный аккаунт на сервисе Rollbar
Подключите Rollbar для React и задеплойте. Проверьте что ошибки доходят до сервиса.

12. Тесты
Соответствие проекта техническому заданию, описанному в шагах, проверяется автоматизированными тестами. Для тестирования используется библиотека react-testing-library, которая имитирует взаимодействие пользователя с приложением. Для прохождения тестов важно соблюсти некоторые требования:

Проект должен называться @hexlet/code.
Не создавайте глобальных объектов, которые могут хранить состояние между запусками приложения. Это требование справедливо не только для целей тестирования.
В проекте должна использоваться локаль ru.
На каждой странице должна быть ссылка на главную с текстом Hexlet Chat.
Тексты интерфейса должны совпадать с теми, которые ожидаются тестами. Смотрите подсказку ниже.
Тесты ищут определённый элемент на странице по ряду признаков: роль, текст элемента, текст лейбла (у полей вводов). Поэтому не стоит делать кнопки элементами div, например. Смотрите вывод тестов для дополнительной информации.
В тестах нет сервера, его работа имитируется. Поэтому не меняйте интерфейсы серверного кода.
Тесты устроены следующим образом:

import init from '@hexlet/code'; // приложение импортируется как зависимость

beforeEach(async () => { // выполнится перед каждым тест-кейсом
  const vdom = await init(socket.socketClient); // ожидаемый интерфейс вашего приложения
  render(vdom);
});

test(() => {
  // код теста
});
Задачи
Проект должен пройти автоматизированные тесты
Подсказки
При отладке обязательно смотрите и анализируйте вывод тестов. Логгируйте события в приложении, в том числе ошибки в блоках try catch.
Тексты интерфейсов: Ваш ник, Пароль, Войти, Неверные имя пользователя или пароль, Регистрация, Подтвердите пароль, Зарегистрироваться, Имя пользователя, От 3 до 20 символов, Не менее 6 символов, Пароли должны совпадать, Отправить, Ошибка соединения. Заметьте, насколько проще делать массовое обновление текстов с библиотекой интернационализации!